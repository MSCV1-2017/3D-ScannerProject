#include "tdk_database.h"

std::vector<TDK_Edit*> TDK_Database::mv_EditHistoryVector ;

unsigned int TDK_Database::mv_NumberOfAutogeneratedPointClouds = 0;
std::vector<QString> TDK_Database::mv_PointCloudsName;
std::vector<pcl::PointCloud<pcl::PointXYZRGB>::Ptr> TDK_Database::mv_PointCloudsVector;

unsigned int TDK_Database::mv_NumberOfAutogeneratedRegisteredPointClouds = 0;
std::vector<QString> TDK_Database::mv_RegisteredPointCloudsName;
std::vector<pcl::PointCloud<pcl::PointXYZRGB>::Ptr> TDK_Database::mv_RegisteredPointCloudsVector;

unsigned int TDK_Database::mv_NumberOfAutogeneratedMeshes = 0;
std::vector<QString> TDK_Database::mv_MeshesName;
std::vector<pcl::PolygonMesh::Ptr> TDK_Database::mv_MeshesVector;

TDK_Database::TDK_Database(QObject *parent) : QObject(parent)
{

}

TDK_Database::~TDK_Database()
{

}

void TDK_Database::mf_StaticAddPointCloud(pcl::PointCloud<pcl::PointXYZRGB>::Ptr pointCloudPtr, QString pointCloudName)
{
    QString name;
    qDebug() << "Trying to add point cloud";
    mv_PointCloudsVector.push_back(pointCloudPtr);
    qDebug() << "Point cloud set";
    if("U1425_AUTOGENERATE" == pointCloudName){
        mv_NumberOfAutogeneratedPointClouds++;
        name = QString("TDK_CapturedPointCloud").append(QString::number(mv_NumberOfAutogeneratedPointClouds));
        mv_PointCloudsName.push_back(name);
        qDebug() << "Point cloud name set default " << QString("TDK_CapturedPointCloud").append(QString::number(mv_NumberOfAutogeneratedPointClouds));
    }
    else{
        name = pointCloudName;
        mv_PointCloudsName.push_back( pointCloudName );
        qDebug() << "Point cloud name set " << pointCloudName;
    }
}

void TDK_Database::mf_StaticAddRegisteredPointCloud(pcl::PointCloud<pcl::PointXYZRGB>::Ptr registeredPointCloudPtr, QString registeredPointCloudName)
{
    QString name;
    qDebug() << "Trying to add registered point cloud";
    mv_RegisteredPointCloudsVector.push_back(registeredPointCloudPtr);
    qDebug() << "Registered Point cloud set";
    if("U1425_AUTOGENERATE" == registeredPointCloudName){
        mv_NumberOfAutogeneratedRegisteredPointClouds++;
        name = QString("TDK_RegisteredPointCloud").append(QString::number(mv_NumberOfAutogeneratedRegisteredPointClouds));
        mv_RegisteredPointCloudsName.push_back(name);
        qDebug() << "Registered Point cloud name set default";
    }
    else{
        name = registeredPointCloudName;
        mv_RegisteredPointCloudsName.push_back(registeredPointCloudName);
        qDebug() << "Point cloud name set " << registeredPointCloudName;
    }
}

void TDK_Database::mf_StaticAddMesh(pcl::PolygonMesh::Ptr meshPtr, QString meshName)
{
    QString name;
    qDebug() << "Trying to add mesh";
    mv_MeshesVector.push_back( meshPtr );
    qDebug() << "Mesh set";
    if("U1425_AUTOGENERATE" == meshName){
        mv_NumberOfAutogeneratedMeshes++;
        name = QString("TDK_Mesh").append(QString::number(mv_NumberOfAutogeneratedMeshes));
        mv_MeshesName.push_back( name );
        qDebug() << "Mesh name set default";
    }
    else{
        name = meshName;
        mv_MeshesName.push_back( meshName );
        qDebug() << "Point cloud name set " << meshName;
    }
}
